@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    //4564654
    //Layout = "_Layout3";
}

@section Styles {

    <link href="~/lib/sweetalert2/css/sweetalert2.min.css" rel="stylesheet" />
    <link href="~/lib/select2/css/select2.css" rel="stylesheet" />
    <link href="~/lib/datetimepicker/css/jquery.datetimepicker.min.css" rel="stylesheet" />
    <link href="~/lib/datatables/buttons/css/buttons.bootstrap.css" rel="stylesheet" />
    <link href="~/lib/datatables/buttons/css/buttons.dataTables.css" rel="stylesheet" />
    <link href="~/lib/datatables/css/jquery.dataTables.css" rel="stylesheet" />
    @*<link href="~/lib/datatables/css/dataTables.bootstrap.css" rel="stylesheet" />*@


    <style type="text/css">

        body {
            font-family: Roboto !important;
        }

        /* Custom DataTable Styles */
        .dataTables_wrapper {
            font-family: Arial, sans-serif;
            font-size: 14px;
        }

        table.dataTable thead th {
            background-color: #f2f2f2;
            border: 1px solid #ddd;
        }

        table.dataTable tbody td {
            border: 1px solid #ddd;
        }

        table.dataTable tbody tr:nth-child(even) {
            background-color: #f9f9f9;
        }

        table.dataTable.no-footer {
            border-bottom: 0;
        }

        .dataTables_paginate {
            margin-top: 10px;
        }

        .dataTables_filter label {
            margin-right: 10px;
        }


        .hidden {
            display: none;
        }

        .xdsoft_datetimepicker {
            z-index: 999999999;
        }

        .abcdClass {
            color: red !important;
        }

        .btn-bottom {
            align-self: end;
        }

        .text-right {
            text-align: right;
        }

        .icon-collapse {
            position: absolute;
            right: 10px;
            top: 10px;
            cursor: pointer;
        }

        .text-green {
            color: green;
        }

        .text-red {
            color: red;
        }

        .hide {
            display: none;
        }
    </style>

}



<div class="card">
    <h5 class="card-header">Search Student</h5>
    <i class="fa fa-arrow-up icon-collapse " aria-hidden="true" data-bs-toggle="collapse" href="#divBodySearch" aria-expanded="false" aria-controls="divBodySearch"></i>

    <div class="card-body collapse show" id="divBodySearch">
        @*<div class="row">
                <div class="col-12">
                    <h5 class="card-title">Search student by click that button</h5>
                </div>
            </div>*@
        <div class="row">
            <div class="col-4">
                <button class="btn btn-primary" onclick="searchStudent()">Click to get Student Data</button>
            </div>
            <div class="col-4">

                <label class="col-form-label">Student Name</label>
                <input class="form-control" type="text" id="txtSearchStudentName" />
            </div>
            <div class="col-4">

                <label class="col-form-label">Student Description</label>
                <input class="form-control" type="text" id="txtSearchStudentDescription" />
            </div>
        </div>
        <div class="row">
            <div class="col-12">
                <table class="table table-striped" id="tblStudent">
                    <thead>
                        <tr>
                            <th class="text-center">No</th>
                            <th class="text-center" style="max-width:100px;">Student Id</th>
                            <th class="text-center">Student Name</th>
                            <th class="text-center" style="max-width:100px;">Age</th>
                            <th class="text-center">Description</th>
                            <th class="text-center" style="max-width:100px;">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>
        </div>

        <div class="row">
            <div class="col-12">
                <div id="divDataStudent">

                </div>
            </div>
        </div>
    </div>
</div>



<br />


<div class="card">
    <h5 class="card-header">Add Student</h5>
    <i class="fa fa-arrow-up icon-collapse " aria-hidden="true" data-bs-toggle="collapse" href="#divAddStudent" aria-expanded="false" aria-controls="divAddStudent"></i>

    <div class="card-body collapse show" id="divAddStudent">
        <div class="row">
            <div class="col-3">
                <label class="col-form-label">Student Name</label>
                <input class="form-control" type="text" id="txtStudentName" />
            </div>

            <div class="col-3">
                <label class="col-form-label">Student Age</label>
                <input class="form-control" type="number" id="txtStudentAge" />
            </div>


            <div class="col-3">
                <label class="col-form-label">Student Description</label>
                <input class="form-control" type="text" id="txtStudentDescription" />
            </div>


            <div class="col-3  btn-bottom">
                <button class="btn btn-primary" onclick="addStudent()">Add Student</button>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-3">
                <label class="col-form-label">Status : </label>
                <label class="col-form-label" id="lblStatusAddStudent">-</label>
            </div>
            <div class="col-sm-9">
                <label class="col-form-label">Detail : </label>
                <label class="col-form-label" id="lblDetailAddStudent">-</label>
            </div>
        </div>

    </div>
</div>

<br />

<div class="card">
    <h5 class="card-header">Delete Student</h5>
    <i class="fa fa-arrow-up icon-collapse " aria-hidden="true" data-bs-toggle="collapse" href="#divDeleteStudent" aria-expanded="false" aria-controls="divDeleteStudent"></i>


    <div class="card-body collapse show" id="divDeleteStudent">
        <div class="row">

            <div class="col-6">
                <label class="col-form-label">Student Id For Delete</label>
                <input class="form-control" type="number" id="mdlDelStudentId" />
            </div>


            <div class="col-6  btn-bottom">
                <button class="btn btn-primary" onclick="deleteStudent()">Delete Student</button>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-3">
                <label class="col-form-label">Status : </label>
                <label class="col-form-label" id="lblStatusDeleteStudent">-</label>
            </div>
            <div class="col-sm-9">
                <label class="col-form-label">Detail : </label>
                <label class="col-form-label" id="lblDetailDeleteStudent">-</label>
            </div>
        </div>

    </div>
</div>


<br />

<div class="card">
    <h5 class="card-header">Get And Update Student</h5>
    <i class="fa fa-arrow-up icon-collapse " aria-hidden="true" data-bs-toggle="collapse" href="#divUpdateStudent" aria-expanded="false" aria-controls="divUpdateStudent"></i>
    <div class="card-body collapse show" id="divUpdateStudent">
        <div class="row">
            <div class="col-6">
                <label class="col-form-label">Get Student Id </label>
                <input class="form-control" type="number" id="txtGetStudentId" />
            </div>
            <div class="col-6  btn-bottom">
                <button class="btn btn-primary" onclick="getStudentById()">Get Student</button>
                <label class="col-form-label text-red hide" id="lblNoStudentDatatoGet">No Student Data*</label>
            </div>

            <div class="col-3">
                <label class="col-form-label">Student Id </label>
                <input class="form-control" id="txtStudentId" disabled />
            </div>
            <div class="col-3">
                <label class="col-form-label">Student Name </label>
                <input class="form-control" id="txtUpdateStudentName" />
            </div>
            <div class="col-3">
                <label class="col-form-label">Student Age </label>
                <input class="form-control" type="number" id="txtUpdateStudentAge" />
            </div>
            <div class="col-3">
                <label class="col-form-label">Student Description </label>
                <input class="form-control" id="txtUpdateStudentDescription" />
            </div>


            <div class="col-12 btn-bottom mt-3 text-right">
                <button class="btn btn-primary " onclick="updateStudent()">Update Student</button>
            </div>


        </div>
        <div class="row">
            <div class="col-sm-3">
                <label class="col-form-label">Status : </label>
                <label class="col-form-label" id="lblStatusUpdateStudent">-</label>
            </div>
            <div class="col-sm-9">
                <label class="col-form-label">Detail : </label>
                <label class="col-form-label" id="lblDetailUpdateStudent">-</label>
            </div>
        </div>
    </div>
</div>


<!-- Modal -->
<div class="modal fade" id="mdlUpdateStudent" tabindex="-1" role="dialog" aria-labelledby="lblMdlTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-xl" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="lblMdlTitle">Update Student</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closeUpdateModal()">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-sm-3">
                        <label class="col-form-label">Student Id </label>
                        <input class="form-control" id="txtMdlStudentId" disabled />
                    </div>
                    <div class="col-sm-3">
                        <label class="col-form-label">Student Name </label>
                        <input class="form-control" id="txtMdlStudentName" />
                    </div>
                    <div class="col-sm-3">
                        <label class="col-form-label">Student Age </label>
                        <input class="form-control" id="txtMdlStudentAge" />
                    </div>
                    <div class="col-sm-3">
                        <label class="col-form-label">Student Description </label>
                        <input class="form-control" id="txtMdlStudentDescription" />
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="closeUpdateModal()">Close</button>
                <button type="button" class="btn btn-primary" onclick="updateStudentInModal()">Save changes</button>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <input class="form-control" id="txtLineText" />
    <button class="btn btn-primary" onclick="clickToLineAlert()">line ALert</button>
</div>


@section Scripts {
    @*move to layout already 2024 03 11*@
    <!--<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>-->
    @*popup*@
    <!--<script src="~/lib/sweetalert2/js/sweetalert2.min.js"></script>-->
    @*dropdown beautiful tool*@
    <!--<script src="~/lib/select2/js/select2.full.js"></script>-->
    @*create barcode*@
    <!--<script src="~/lib/JsBarcode/JsBarcode.code128.min.js"></script>-->
    @*qr code*@
    <!--<script src="~/lib/html5-qrcode/qrcode.min.js"></script>-->
    @*datetimePicker calendar*@
    <!--<script src="~/lib/datetimepicker/js/jquery.datetimepicker.full.js"></script>-->
    @*datatable*@
    <!--<script src="~/lib/datatables/js/jquery.dataTables.js"></script>-->
    @*<script src="~/lib/datatables/js/dataTables.bootstrap.js"></script>*@

    @*click to print from data table*@
    <!--<script src="~/lib/datatables/buttons/js/dataTables.buttons.js"></script>
    <script src="~/lib/datatables/buttons/js/buttons.bootstrap.js"></script>
    <script src="~/lib/datatables/buttons/js/buttons.flash.js"></script>
    <script src="~/lib/datatables/buttons/js/buttons.html5.js"></script>
    <script src="~/lib/datatables/buttons/js/buttons.print.js"></script>
    <script src="~/lib/datatables/buttons/js/jszip.js"></script>-->



<script type="text/javascript">




        var studentList = []; //ObjectList

        $(document).ready(function () { //โหลด HTML เสร็จแล้วทำ Function;

            setTimeout(function () {
                searchStudent();
            }, 100)
        });


        $(".fa-arrow-up").click(function () {
            $(this).toggleClass("fa-arrow-down fa-arrow-up");
        });

        function searchStudent() {
            var searchTerm = {
                StudentName: $("#txtSearchStudentName").val(),
                StudentDescription: $("#txtSearchStudentDescription").val(),

            }
            var obj1 = { Name:"obj1" };
            //var json = { "Name":"obj1" };
            $.ajax(
                {
                    type: 'POST',
                    url: '@Url.Action("SearchStudent", "Student")',
                    ////url: '@Url.Action("Noobwin", "Home")',
                    data: searchTerm,
                    //global: true,
					dataType: "json",
                    success: function (response) {
                        //var data = response;
                        var data = {
                            Data: response.data,
                            Message: response.message,
                            Success: response.success,
                        }
                        //alert(JSON.stringify(response));
                        //$("#divDataStudent").html(JSON.stringify(response))

                        bindingStudentTable(response.data)
                    },
                    error: function (request, status, error) {

                    }
                });
        }

        function bindingStudentTable(dataList) {
            //var newObjList = [];
            //for (let i = 0; i < dataList.length; i++) {
            //    // Duplicate each item 5 times
            //    for (let j = 0; j < 5; j++) {
            //        newObjList.push({ ...dataList[i] }); // Using spread syntax to create a copy of the object
            //    }
            //}

            var table = $("#tblStudent").DataTable({ //select id
                processing: true,
                destroy: true,
                data: dataList,
                searching: true,
                scrollX: true,
                scrollY: '20vh',
                info: false,
                order: [[0, "asc"]],
                lengthChange: false,
                paging: false,
                columns: [ //จำนวน columns ต้องตรงกับจำนวน tableHead และอย่าลืม tableBody
                    { //0
                        data: null, className: "text-center  details-control", orderable: true, visible: true, //data = null ไม่โชว์, classname ใส่ class, orderable เปิดการเรียงลำดับ
                        render: function (data, type, full, meta) { //type, full = data ทั้งหมด, meta เป็น default
                            //return meta.row + 1;
                            return '<a href="#" id="lblStudentRow' + (meta.row + 1) + '"><b>' + (meta.row + 1) + '</b> &nbsp; <i class="fa fa-angle-double-down"></i></a>';

                        }
                    },
                    { data: "StudentId", className: "text-center" }, //1
                    { data: "StudentName", className: "text-left" }, //1
                    { data: "StudentAge", className: "text-right" }, //1
                    { data: "StudentDescription", className: "text-left" }, //1
                    {
                        data: null, className: "text-center abcdClass", orderable: false,
                        render: function (data, type, full, meta) {
                            return `<button class="btn btn-warning btn-student-edit"><i class="fa fa-wrench" aria-hidden="true"></i> แก้ไข</button>`;
                        }
                    },

                ],
            });
        }

        $('#tblStudent tbody').on('click', '.btn-student-edit', function () {
            $("#mdlUpdateStudent").modal('show')
            var table = $('#tblStudent').DataTable();
            var data = table.row($(this).parents('tr')).data();
            $("#txtMdlStudentId").val(data.StudentId);
            $("#txtMdlStudentName").val(data.StudentName);
            $("#txtMdlStudentAge").val(data.StudentAge);
            $("#txtMdlStudentDescription").val(data.StudentDescription);
        });

        function updateStudentInModal() {
            var studentData = {
                StudentId: $("#txtMdlStudentId").val(),
                StudentName: $("#txtMdlStudentName").val(),
                StudentAge: $("#txtMdlStudentAge").val(),
                StudentDescription: $("#txtMdlStudentDescription").val(),
            }
            $.ajax(
                {
                    dataType: "json",
                    type: 'POST',
                    url: '@Url.Action("UpdateStudent", "Student")',
                    data: studentData,
                    success: function (response) {
                        /*alert(JSON.stringify(response));*/
                        if (response.data != null && response.data.Success) {
                            $("#txtMdlStudentName").val(""),
                                $("#txtMdlStudentId").val(""),
                                $("#txtMdlStudentAge").val(""),
                                $("#txtMdlStudentDescription").val("")
                            closeUpdateModal();
                            searchStudent();

                        } else {
                            alert("Failed to Update Please Try again : " + JSON.stringify(response));
                        }

                    },
                    error: function (request, status, error) {

                    }
                });
        }



        function addStudent() {
            var studentData = {
                StudentName: $("#txtStudentName").val(),
                StudentAge: $("#txtStudentAge").val(),
                StudentDescription: $("#txtStudentDescription").val(),
            }
            $.ajax(
                {
                    dataType: "json",
                    type: 'POST',
                    url: '@Url.Action("AddStudent", "Student")',
                    data: studentData,
                    success: function (response) {
                        //alert(JSON.stringify(response));
                        $("#lblStatusAddStudent").text(response.data.Success ? "Add Success" : "Error Cannot Add");
                        $("#lblDetailAddStudent").text(response.data.Message ?? "-");
                        if (response.data.Success) {
                            $("#txtStudentName").val("")
                            $("#lblStatusAddStudent").addClass("text-green").removeClass("text-red");
                            $("#txtStudentAge").val("")
                            $("#txtStudentDescription").val("")
                            searchStudent();
                        } else {
                            $("#lblStatusAddStudent").addClass("text-red").removeClass("text-green");
                        }
                    },
                    error: function (request, status, error) {

                    }
                });
        }

        function closeUpdateModal() {
            $("#mdlUpdateStudent").modal('hide')
        }

        function getStudentById() {
            var studentId = $("#txtGetStudentId").val();

            $.ajax(
                {
                    dataType: "json",
                    type: 'GET',
                    url: '@Url.Action("GetStudentById", "Student")',
                    data: { StudentId: studentId },
                    success: function (response) {
                        var studentdata = response.data;
                        if (studentdata != null) {
                            $("#txtStudentId").val(studentdata.StudentId)
                            $("#txtUpdateStudentName").val(studentdata.StudentName)
                            $("#txtUpdateStudentAge").val(studentdata.StudentAge)
                            $("#txtUpdateStudentDescription").val(studentdata.StudentDescription)
                            $("#txtGetStudentId").val("");
                            $("#lblNoStudentDatatoGet").hide();


                            $("#lblStatusUpdateStudent").text("Get Student Success");
                            $("#lblStatusUpdateStudent").addClass("text-green").removeClass("text-red");
                            $("#lblDetailUpdateStudent").text("-");

                        } else {
                            $("#txtStudentId").val("")
                            $("#txtUpdateStudentName").val("")
                            $("#txtUpdateStudentAge").val("")
                            $("#txtUpdateStudentDescription").val("")
                            $("#lblNoStudentDatatoGet").show();


                            $("#lblStatusUpdateStudent").text("Get Student Failed");
                            $("#lblStatusUpdateStudent").addClass("text-red").removeClass("text-green");
                            $("#lblDetailUpdateStudent").text("-");
                        }

                    },
                    error: function (request, status, error) {

                    }
                });
        }


        function updateStudent() {
            var studentData = {
                StudentId: $("#txtStudentId").val(),
                StudentName: $("#txtUpdateStudentName").val(),
                StudentAge: $("#txtUpdateStudentAge").val(),
                StudentDescription: $("#txtUpdateStudentDescription").val(),
            }
            $.ajax(
                {
                    dataType: "json",
                    type: 'POST',
                    url: '@Url.Action("UpdateStudent", "Student")',
                    data: studentData,
                    success: function (response) {
                        /*alert(JSON.stringify(response));*/
                        if (response.data != null && response.data.Success) {
                                $("#txtStudentId").val(""),
                                $("#txtUpdateStudentName").val(""),
                                $("#txtUpdateStudentAge").val(""),
                                $("#txtUpdateStudentDescription").val("")
                            $("#lblStatusUpdateStudent").text("Update Success");
                            $("#lblStatusUpdateStudent").addClass("text-green").removeClass("text-red");
                            $("#lblDetailUpdateStudent").text(response.data.Message);

                            searchStudent();

                        } else {
                            $("#lblStatusUpdateStudent").text("Update Failed");
                            $("#lblStatusUpdateStudent").addClass("text-red").removeClass("text-green");
                            $("#lblDetailUpdateStudent").text(response.data.Message ?? "-");

                        }

                    },
                    error: function (request, status, error) {

                    }
                });
        }




        function deleteStudent() {
            var studentId = $("#mdlDelStudentId").val();
            $.ajax(
                {
                    dataType: "json",
                    type: 'POST',
                    url: '@Url.Action("DeleteStudent", "Student")',
                    data: {
                        StudentId: studentId
                    },
                    success: function (response) {
                        //alert(JSON.stringify(response));

                        $("#lblStatusDeleteStudent").text(response.data.Success ? "Delete Student Success" : "Failed to Delete this Student");
                        $("#lblDetailDeleteStudent").text(response.data.Message ?? "-");

                        if (response.data.Success) {
                            $("#mdlDelStudentId").val("");
                            searchStudent();
                            $("#lblStatusDeleteStudent").addClass("text-green").removeClass("text-red");
                        } else {
                            $("#lblStatusDeleteStudent").addClass("text-red").removeClass("text-green");
                        }

                    },
                    error: function (request, status, error) {

                    }
                });
        }





        // child row

        $('#tblStudent tbody').on('click', 'td.details-control', function (e) {
            e.preventDefault();
            var table = $('#tblStudent').DataTable();
            var tr = $(this).parents('tr');
            var row = table.row(tr);
            var data = table.row($(this).parents('tr')).data();

            if (row.child.isShown()) { //close
                $("#slide" + data.StudentId).slideUp(function () {
                    row.child.hide();
                    tr.removeClass('shown');
                });
                this.innerHTML = '<a href="#"><b>' + row.data().StudentId + '</b> &nbsp; <i class="fa fa-angle-double-down"></i></a>';
            }
            else { // Open
         @*row.child(createOrderChild(row.data(), row.data().DocRefNo)).show();*@
                row.child(createOrderChild(data, data.StudentId)).show();
                tr.addClass('shown');
                //$('div.slider', row.child()).slideDown();
                $("#slide" + data.StudentId).slideDown();
                this.innerHTML = '<a href="#"><b>' + row.data().StudentId + '</b> &nbsp; <i class="fa fa-angle-double-up"></i></a>';


            }
        });

        function createOrderChild(dataList, studentId) {
            console.log(dataList);
            var html = '<div id="slide' + studentId + '" class="py-3" > <table  style="width:100%!important;" class="table table-order ">' +
                '<thead style="background-color:#56bcc6 !important;">' + //6f87c4 a9d4ff
                '<tr>' +

                '<th class="text-center">Student Id</th>' +
                '<th class="text-center">Student Name</th>' +
                '<th class="text-center">Student Age</th>' +
                '<th class="text-center">Student Description</th>' +
                '</tr>' +
                '</thead>' +
                '<tbody>' +
                '<tr>' +

                '<td class="text-center">' + (dataList.StudentId == null ? "" : dataList.StudentId) + '</td> ' +
                '<td class="">' + (dataList.StudentName == null ? "" : dataList.StudentName) + '</td> ' +
                '<td class="">' + (dataList.StudentAge == null ? "" : dataList.StudentAge) + '</td> ' +
                '<td class="">' + dataList.StudentDescription + '</td> ' +
                '</tr>' +
                '</tbody>' +
                '</table>' +

                '<hr>' +

                '<table  style="width:100%!important;" class="table table-bordered" style="margin-top:25px">' +
                '<tbody >';
            //var item = dataList.Items;
            //for (var i = 0; i < item.length; i++) {
            //    html += '<tr >' +
            //        '<td> Product : ' + item[i].MatCode + ' ' + item[i].MatName + '</td>' +
            //        '<td> Shipping Mark : ' + (item[i].ShippingMark == null ? "" : item[i].ShippingMark) + '</td>' +
            //        '<td> TrackingNo : ' + (item[i].PackTracking == null ? "-" : item[i].PackTracking) + '</td>' +
            //        '<td> Total : ' + item[i].SaleUnitQty + ' * ' + numberWithCommas(item[i].UnitPrice) + ' = ' + numberWithCommas((item[i].SaleUnitQty * item[i].UnitPrice).toFixed(2)) + '</td>' +
            //        '</tr>';
            //}
            html += '</tbody>' +
                '</table>'

            '</div>';


            return html;
        }


    function clickToLineAlert() {
        var sendData = {
            ItemText: $("#txtLineText").val()
        }
        $.ajax(
            {
                type: 'POST',
                url: '@Url.Action("LineAlert", "Student")',
                data: sendData,
                //global: true,
                dataType: "json",
                success: function (response) {

                    //alert(JSON.stringify(response));

                    bindingStudentTable(response.data)
                },
                error: function (request, status, error) {

                }
            });
    }
</script>
}


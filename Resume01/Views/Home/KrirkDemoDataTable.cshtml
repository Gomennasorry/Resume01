@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    //4564654
    //Layout = "_Layout3";
}

@section Styles {

    <link href="~/lib/sweetalert2/css/sweetalert2.min.css" rel="stylesheet" />
    <link href="~/lib/select2/css/select2.css" rel="stylesheet" />
    <link href="~/lib/datetimepicker/css/jquery.datetimepicker.min.css" rel="stylesheet" />
    <link href="~/lib/datatables/buttons/css/buttons.bootstrap.css" rel="stylesheet" />
    <link href="~/lib/datatables/buttons/css/buttons.dataTables.css" rel="stylesheet" />
    <link href="~/lib/datatables/css/jquery.dataTables.css" rel="stylesheet" />
    @*<link href="~/lib/datatables/css/dataTables.bootstrap.css" rel="stylesheet" />*@


    <style type="text/css">

        body {
            font-family: Roboto !important;
        }

        /* Custom DataTable Styles */
        .dataTables_wrapper {
            font-family: Arial, sans-serif;
            font-size: 14px;
        }

        table.dataTable thead th {
            background-color: #f2f2f2;
            border: 1px solid #ddd;
        }

        table.dataTable tbody td {
            border: 1px solid #ddd;
        }

        table.dataTable tbody tr:nth-child(even) {
            background-color: #f9f9f9;
        }

        table.dataTable.no-footer {
            border-bottom: 0;
        }

        .dataTables_paginate {
            margin-top: 10px;
        }

        .dataTables_filter label {
            margin-right: 10px;
        }


        .hidden {
            display: none;
        }

        .xdsoft_datetimepicker {
            z-index: 999999999;
        }

        .abcdClass {
            color: red !important;
        }
    </style>

}
@*<div class="row">
        <div class="col-sm-12">Student Page</div>
    </div>*@
<p id="gfg"></p>

<div class="row">
    <div class="col-12">
        <div class="container mt-1">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    Student Page
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-sm-2">
                            <label class="col-form-label">Name</label>
                            <input class="form-control" id="txtName" placeholder="student name" />
                        </div>

                        <div class="col-sm-2">
                            <label class="col-form-label">Age</label>
                            <input type="number" class="form-control" id="txtAge" placeholder="student age" />
                        </div>

                        <div class="col-sm-2">
                            <label class="col-form-label">Gender</label>
                            <br />
                            <input type="radio" id="rdoBoy" name="gender" value="Boy" class="radio" checked>
                            <label class="col-form-label" for="rdoBoy">Boy</label>
                            &nbsp;&nbsp;&nbsp;&nbsp;
                            <input type="radio" id="rdoGirl" name="gender" value="Girl" class="radio">
                            <label class="col-form-label" for="rdoGirl">Girl</label>
                        </div>



                    </div>

                    <div class="row">

                        <div class="col-sm-2">
                            <label class="col-form-label" for="ddlRoom">Room</label>
                            <br />
                            <select id="ddlRoom" name="room" class="form-select select2 ">
                                <option value="A">Room A</option>
                                <option value="B">Room B</option>
                                <option value="C">Room C</option>
                            </select>
                        </div>

                        <div class="col-sm-2">

                        </div>


                        <div class="col-sm-2">
                            <label class="col-form-label">Status</label>
                            <br />
                            <input type="checkbox" id="chkVIP" name="vip" value="VIP" class="form-check-inline">
                            <label for="chkVIP">VIP</label><br>
                        </div>

                        <div class="col-sm-6">
                            <label class="col-form-label">Description</label>
                            <br />
                            <textarea class="form-control" rows="1" id="txtDescription"></textarea>
                        </div>

                    </div>

                    <div class="row">
                        <div class="col-sm-2">
                            <label>Student Date</label>
                            <div class="input-group">
                                <input class="form-control" type="text" placeholder="From" id="txtStudentFr">
                                <span class="input-group-addon bg-white"><i class="fa fa-calendar"></i></span>
                            </div>
                        </div>
                        <div class="col-sm-1">
                            <label>to</label>
                        </div>
                        <div class="col-sm-2">
                            <label>&nbsp;</label>
                            <div class="input-group">
                                <input class="form-control" type="text" placeholder="To" id="txtStudentTo">
                                <span class="input-group-addon bg-white"><i class="fa fa-calendar"></i></span>
                            </div>
                        </div>
                    </div>




                    <div class="row justify-content-end mt-3 ">
                        <div class="col-sm-1 text-end">
                            <button class="btn btn-primary" onclick="addStudentAndBinding()">Save Student</button>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>
<div class="row hidden" id="divTable">
    <div class="col-sm-12">

        <div class="container mt-3">
            <div class="card">
                <div class="card-body">
                    <table id="tblStudent" class="table table-student w-100 display">
                        <thead id="tblHeader">
                            <tr>
                                <th>No.</th>
                                <th>Name</th>
                                <th>Age</th>
                                <th>Gender</th>
                                <th>Room</th>
                                <th>Status</th>
                                <th>Description</th>
                                <th>Student Start Date</th>
                                <th>hidden Student Start Date</th>
                                <th>Student Stop Date</th>
                                <th>hidden Student Start Date</th>
                                <th>Created Date</th>
                                <th>hidden Date</th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>

                </div>
            </div>
        </div>


    </div>
</div>


@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>

    @*popup*@
    <script src="~/lib/sweetalert2/js/sweetalert2.min.js"></script>

    @*dropdown beautiful tool*@
    <script src="~/lib/select2/js/select2.full.js"></script>

    @*create barcode*@
    <script src="~/lib/JsBarcode/JsBarcode.code128.min.js"></script>

    @*qr code*@
    <script src="~/lib/html5-qrcode/qrcode.min.js"></script>

    @*datetimePicker calendar*@
    <script src="~/lib/datetimepicker/js/jquery.datetimepicker.full.js"></script>


    @*datatable*@
    <script src="~/lib/datatables/js/jquery.dataTables.js"></script>
    @*<script src="~/lib/datatables/js/dataTables.bootstrap.js"></script>*@

    @*click to print from data table*@
    <script src="~/lib/datatables/buttons/js/dataTables.buttons.js"></script>
    <script src="~/lib/datatables/buttons/js/buttons.bootstrap.js"></script>
    <script src="~/lib/datatables/buttons/js/buttons.flash.js"></script>
    <script src="~/lib/datatables/buttons/js/buttons.html5.js"></script>
    <script src="~/lib/datatables/buttons/js/buttons.print.js"></script>
    <script src="~/lib/datatables/buttons/js/jszip.js"></script>



    <script type="text/javascript">

        var studentList = []; //ObjectList

        $(document).ready(function () { //โหลด HTML เสร็จแล้วทำ Function;


            /* Add "https://api.ipify.org?format=json" to
           get the IP Address of user*/
            $.getJSON("https://api.ipify.org?format=json",
                function (data) {

                    // Displayin IP address on screen
                    $("#gfg").html(data.ip);
                })


            $("#txtStudentFr").datetimepicker({ //เรียกไอดี txtStudentFr
                mask: true, //หน้ากากทำตาม Format ของ datetimepicker
                autoClose: true, //กดคลิกนอกกรอบจะปิดให้เอง
                step: 1, //เพิ่มขึ้นทีละ 1 นาที
                format: 'd/m/Y', //Format ของ datetimepicker Y-m-d ตั้งค่าเองได้
                formatDate: 'd/m/Y', //ควรตั้งให้เหมือนกัน
                scrollInput: false, //Scroll mouse
                onShow: function (ct) { //เมื่อเปิดหน้าต่าง ทำตามคำสั่งข้างใน
                    this.setOptions({ //ตั่งค่า
                        maxDate: $('#txtStudentTo').val() ? $('#txtStudentTo').val() : false //วันที่มากที่สุด ? = function if else
                        //var word = (a > b) ? true : false;
                        //var word = (a > b) ? "hello" : "world";
                        //var word = (a) ?? "hello"; ถ้า a มีค่าใส่ค่า a ถ้าเป็น null ใส่ค่า hello
                    })
                },
                timepicker: false, //เปิดเวลาใน datetimepicker
                value: moment().subtract(3, "days").format("DD/MM/YYYY"), //moment library เวลาปัจจุบัน, subtarct ลบ 3 วันจากวันนี้
            });
            $("#txtStudentTo").datetimepicker({ //เรียกไอดี txtStudentTo
                mask: true,
                autoClose: true,
                step: 1,
                format: 'd/m/Y',
                formatDate: 'd/m/Y',
                scrollInput: false,
                onShow: function (ct) {
                    this.setOptions({
                        minDate: $('#txtStudentFr').val() ? $('#txtStudentFr').val() : false
                    })
                },
                timepicker: false,
                value: moment().format("DD/MM/YYYY"),
            });

            $(".select2").select2(); //ใช้เรียก library select2 จัด dropdown
        });

        function addStudentAndBinding() { //funcction เพิ่มนักเรียน
            debugger
            //var d = $('#txtStudentFr').datetimepicker('getValue');

            Swal.fire({ //switch alert, popup
                title: "Do you want to save the changes?", //ชื่อเรื่อง
                //showDenyButton: true,
                showCancelButton: true, //โชว์ปุ่ม cancel
                confirmButtonText: "Save", //คำพูดในปุ่ม confirmButton
                //denyButtonText: `Don't save`
            }).then((result) => { //หลังจากกดปุ่ม
                /* Read more about isConfirmed, isDenied below */
                if (result.isConfirmed) { //ถ้ากดปุ่ม comfirm

                    var currentDateTimeUTC = moment().utc(); //เวลาปัจจุบันแล้วใช้ timezone UTC

                    // Add 7 hours to adjust to UTC+7
                    var currentDateTimeUTC7 = currentDateTimeUTC.add(7, 'hours');

                    // Format the date and time
                    var currentDateTimeUTC7FormattedForSQL = currentDateTimeUTC7.format('YYYY-MM-DD h:mm');

                    var studentObject = { //สร้างตัวแปร object
                        Name: $("#txtName").val(), //select ค่าของ html มาเก็บใน name
                        Name2: document.getElementById("txtName").value,
                        Age: $("#txtAge").val(),
                        Gender: $('input[type=radio][name=gender]:checked').val(), //checked radio
                        //Room: $("#ddlRoom").val(),
                        Room: $('#ddlRoom option:selected').text(), //dropdown slected
                        Status: $('#chkVIP').is(':checked'), //เป็นการ checked อีกวิธี
                        Description: $("#txtDescription").val(),
                        StudentFr: moment($("#txtStudentFr").val(), 'DD/MM/YYYY').format('YYYY-MM-DD'),
                        //moment("10-12-2000", "DD-MM-YYYY").format("MM-DD-YYYY") = 12-10-2000
                        StudentTo: moment($("#txtStudentTo").val(), 'DD/MM/YYYY').format('YYYY-MM-DD'),
                        CreatedDate: currentDateTimeUTC7FormattedForSQL,
                        CreatedDate2: "วันนี้"
                        //Goddate: "2024-02-25"
                        //Fatherday: "monday"
                        //FavoriteColor: "blue"

                    }
                    debugger
                    studentList.push(studentObject); //ใส่ object ใน objectlist

                    $("#divTable").show();

                    bindingOrder(studentList);

                } else if (result.isDenied) {
                    Swal.fire("Changes are not saved", "", "info");
                }
            });

        }

        function bindingOrder(dataList) { //รับ parameter จาก studentList
            var table = $("#tblStudent").DataTable({ //select id
                data: dataList, //เอา parameter มาเก็บใน data
                processing: true,
                destroy: true, //สร้างซ้ำได้
                scrollX: true, //เลื่อนแนวนอน
                //scrollCollapse: true,
                searching: true, //filter ของ library
                order: [[1, "desc"]], //desc เรียงจากมากไปน้อย, asc เรียงจากน้อยไปมาก, 1 = name, 2 = age, 0 = row
                //lengthChange: true, show จำนวนนักเรียนที่เพิ่มเข้าไปตามจำนวนที่เลือก
                //dom: "t" + //dom จัดรูป
                //    "<'row'<'col-sm-6 col-md length-change'l><'col-sm-6 col-md info-table'i><'col-sm-12 col-md paging-table'p>>",
                //buttons: [ //หานอกรอบ dataTable print excel
                //    {
                //        text: '<i class="fa fa-download"></i>',
                //        extend: 'excel', className: 'btn btn-outline-primary btn-excel',
                //        exportOptions: {
                //            columns: [1, 2, 5, 6, 7, 8, 9, 10]
                //        }
                //    }
                //],
                columns: [ //จำนวน columns ต้องตรงกับจำนวน tableHead และอย่าลืม tableBody
                    { //0
                        data: null, className: "text-center abcdClass", orderable: true, //data = null ไม่โชว์, classname ใส่ class, orderable เปิดการเรียงลำดับ
                        render: function (data, type, full, meta) { //type, full = data ทั้งหมด, meta เป็น default
                            debugger
                            return meta.row + 1;
                        }
                    },
                    { data: "Name", className: "text-left" }, //1
                    { //2
                        data: null, className: "", visible: true, //ตัวหนังสือชิดซ้าย ex.name, ตัวเลขชิดขวา ex.age, format เหมือนกันชิดกลาง ex.date, status
                        render: function (data, type, full, meta) {
                            var thisAge = data.Age;
                            return thisAge;
                        }
                    },
                    { data: "Gender", className: "text-left" }, //3

                    { //4
                        data: "Room", className: "text-center", orderable: false,
                        render: function (data, type, full, meta) {
                            var html = "<label class='col-form-label'>" + data + "</label>";
                            return html;
                        }
                    },
                    { //5
                        data: null, className: "text-center", orderable: false,
                        render: function (data, type, full, meta) {
                            var html = "<label class='col-form-label'>" + data.Status + "</label>";
                            return html;
                        }
                    },
                    { //6
                        data: null, className: "text-center", orderable: false,
                        render: function (data, type, full, meta) {
                            var html = `<label class='col-form-label'>${data.Description}</label>`;
                            return html;
                        }
                    },

                    { //7
                        data: null, className: "text-center ", orderData: [8],
                        render: function (data, type, full, meta) {
                            var date = "";
                            if (data.StudentFr != "" && data.StudentFr != null) {
                                date = moment(data.StudentFr).format('DD/MM/YYYY h:mm');
                            }
                            return date;
                        }
                    },
                    { data: "StudentFr", className: "", visible: false }, //8

                    { //9
                        data: null, className: "text-center ", orderData: [10],
                        render: function (data, type, full, meta) {
                            var date = "";
                            if (data.StudentTo != "" && data.StudentTo != null) {
                                date = moment(data.StudentTo).format('DD/MM/YYYY h:mm');
                            }
                            return date;
                        }
                    },
                    { data: "StudentTo", className: "", visible: false }, //10
                    { //11
                        data: null, className: "text-center ", orderData: [12],
                        render: function (data, type, full, meta) {
                            var date = "";
                            if (data.CreatedDate != "" && data.CreatedDate != null) {
                                date = moment(data.CreatedDate).format('DD/MM/YYYY h:mm');
                            }
                            return date;
                        }
                    },
                    { data: "CreatedDate", className: "", visible: false }, //12
                ],
            });
            //$("#btnExport button").remove();
            //table.buttons().container().appendTo('#btnExport');

            Swal.fire({
                title: "Good job!",
                text: "You clicked the button!",
                icon: "success",
                timer: 3000
            });
        }


    </script>
}

